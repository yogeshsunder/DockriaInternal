@using Domain.Model;
@using Microsoft.AspNetCore.Identity
@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager

<ul class="navbar-nav admmin-navbar">
    @if (SignInManager.IsSignedIn(User))
    {
        <li class="nav-item">
            <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">Hello @User.Identity?.Name!</a>
        </li>
        <li class="nav-item">
            <form class="admin-logout" asp-area="Identity" asp-page="/Account/Logout" asp-route-userName="@User.Identity?.Name" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
                <input type="hidden" name="userName" value="@User.Identity?.Name" /> <!-- Add a hidden field to hold the userName value -->
                <button type="submit" class="nav-link btn btn-link text-dark">Logout</button>
            </form>
        </li>
    }
    else
    {
        @*<li class="nav-item">
    <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Register">Register</a>
    </li>*@
        <li class="nav-item">
            <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Login">Login</a>
        </li>
    }
</ul>
